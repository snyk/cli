name: Synchronize CLI Help to User Docs
on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * 1' # Monday at 9

env:
  DESTINATION_BRANCH: docs/automatic-gitbook-update-cli-help
  COMMIT_MESSAGE: 'docs: synchronizing help from snyk/user-docs'

jobs:
  build:
    name: synchronize-help
    runs-on: ubuntu-latest
    steps:
      - name: Checkout user-docs repository
        uses: actions/checkout@v4
        with:
          repository: snyk/user-docs
          path: user-docs
          ref: main

      - name: Checkout cli repository
        uses: actions/checkout@v4
        with:
          repository: snyk/cli
          path: cli
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure git user
        run: |
          git config --global user.email "noreply@snyk.io"

          # GITHUB_ACTOR: The name of the person or app that initiated the workflow.
          git config --global user.name "$GITHUB_ACTOR"

      - name: Create or checkout destination branch
        run: |
          cd cli
          if git show-ref --verify --quiet refs/heads/${{ env.DESTINATION_BRANCH }}; then
            echo "Branch ${{ env.DESTINATION_BRANCH }} already exists, checking out."
            git checkout ${{ env.DESTINATION_BRANCH }}
            exit 0
          fi

          echo "Branch ${{ env.DESTINATION_BRANCH }} does not exist, creating and checking out."
          git checkout -b ${{ env.DESTINATION_BRANCH }}

      - name: Copy help documentation from user-docs to CLI
        run: |
          cp ./user-docs/docs/snyk-cli/commands/*.md ./cli/help/cli-commands/

      - name: Format help files with Prettier
        run: |
          cd ./cli
          npm clean-install
          npx prettier --write ./help/cli-commands/*.md

      - name: Check for changes
        id: check_changes
        run: |
          cd ./cli
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "No documentation changes detected, exiting."
            echo "continue=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "--- Documentation changes detected from GitBooks ---"
          git --no-pager diff --color=always
          echo "------------------------------------------------"

          echo "continue=true" >> "$GITHUB_OUTPUT"

      - name: Commit and push changes (if any)
        if: steps.check_changes.outputs.continue == 'true'
        run: |
          cd ./cli
          git add .
          git commit -m "${{ env.COMMIT_MESSAGE }}"
          git push --force --set-upstream origin ${{ env.DESTINATION_BRANCH }}

      - name: Create or update a pull request
        if: steps.check_changes.outputs.continue == 'true'
        run: |
          cd ./cli
          PR_NUMBER=$(gh pr list \
            --head "${{ env.DESTINATION_BRANCH }}" \
            --json number \
            --jq '.[0].number' \
            --limit 1)

          if [ -n "$PR_NUMBER" ]; then
            echo "PR #$PR_NUMBER already exists. Updating it."
            echo "Pushed changes to existing PR #$PR_NUMBER."
            exit 0
          fi

          echo "No existing PR found. Creating a new one."
          gh pr create \
            --title="${{ env.COMMIT_MESSAGE }}" \
            --body="Automatic PR controlled by GitHub Action" \
            --head "${{ env.DESTINATION_BRANCH }}" \
            --base main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
